name: Build and Deploy to Azure Env

env: 
  AZURE_CONTAINER_REGISTRY: 'picodemo.azurecr.io'

run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: ['master']
  workflow_dispatch:
 
permissions:
  contents: read  

jobs:
  buildImage:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: 'picodemo'
          # Container registry password 
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          # Container registry server url
          # login-server: 'picodemo.azurecr.io'
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
    
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          # tags: <registry server url>/<app name>:<git commit sha>
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/hello-world-app:${{ github.sha }}
          file: ./Dockerfile
      
      
  deployToAKS:
    permissions:
      actions: read
      contents: read
      id-token: write
    
    runs-on: ubuntu-latest
    needs: [buildImage]
    environment: Production
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        
      # Logs in with your Azure credentials
      - name: 'Azure login'
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}  
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                 
      - name: Setup kubelogin
        uses: Azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'
        
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          # Resource Group Name
          resource-group: 'jr9-rg'
          # AKS Cluster Name
          cluster-name: 'picodemo'
          # AKS Cluster Subscription
          subscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # Get cluster admin credentials. Values: true or false
          admin: 'false'
          # Enables kubelogin for non-admin user scenario. Values: true or false
          use-kubelogin: 'true'
          
      # Substitute environment variables in a file
      - name: envsubst-action
        uses: danielr1996/envsubst-action@1.1.0
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          CONTAINER_NAME: hello-world-app:${{ github.sha }}
        # ${{ env.AZURE_CONTAINER_REGISTRY }}
          AZURE_CONTAINER_REGISTRY: ${{ env.AZURE_CONTAINER_REGISTRY }}
        with:
          # File to run substitutions on
          input:
           # ${{ env.DEPLOYMENT_MANIFEST_PATH }}/hello-world-deployment.yaml
            kubernetes/hello-world-deployment.yaml
          # File to write result to
          output:
            hello-world-deployment.yaml  
          
      # Deploys application based on given manifest file
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v4.9
        with:
          # deploy, promote, or reject
          action: deploy
          # default is deploy
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          namespace: default
          # optional, default is default
          # Path to the manifest files which will be used for deployment.
          manifests: |
            hello-world-deployment.yaml
            kubernetes/hello-world-service.yaml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}/hello-world-app:${{ github.sha }}
          # optional
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
         # imagepullsecrets: # optional
          # Switch whether to pull the images from the registry before deployment to find out Dockerfile's path in order to add it to the annotations
        #  pull-images: # optional, default is true
          # Deployment strategy to be used. Allowed values are basic, canary and blue-green
      #    strategy: # default is basic
          # Route based on service, ingress or SMI for blue-green strategy
      #    route-method: # optional, default is service
          # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
       #   version-switch-buffer: # optional, default is 0
          # Traffic split method to be used. Allowed values are pod and smi
       #   traffic-split-method: # optional, default is pod
          # Annotations in the form of key/value pair to be added to TrafficSplit. Relevant only if deployement strategy is blue-green or canary
       #   traffic-split-annotations: # optional
          # Baseline and canary replicas count. Valid value between 0 to 100 (inclusive)
        #  baseline-and-canary-replicas: # optional, default is 
          # Percentage of traffic redirect to canary deployment
        #  percentage: # optional, default is 0
          # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
       #   force: # optional
          # Github token
        #  token: # default is ${{ github.token }}
          # Annotate the target namespace
       #   annotate-namespace: # optional, default is true
          # True if cluster is AKS private cluster
      #    private-cluster: # optional
          # Name of resource group - Only required if using private cluster
       #   resource-group: # optional
          # Resource group name - Only required if using private cluster
      #    name: # optional
          # True if the insecure-skip-tls-verify option should be used. Input should be 'true' or 'false'.
       #   skip-tls-verify: # optional
